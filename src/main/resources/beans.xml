<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
         
	<!-- 打开Spring的Annotation支持 -->
	<context:annotation-config />		
	<!-- 设定Spring 去哪些包中找Annotation -->
	<context:component-scan base-package="com.yoson.cms.dao.impl,com.yoson.cms.service.impl" />
		
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		    <property name="driverClass" value="${jdbc.driverClassName}"/>
		    <property name="jdbcUrl" value="${jdbc.url}"/>
		    <property name="user" value="${jdbc.username}"/>
		    <property name="password" value="${jdbc.password}"/>	
			<!-- 其他配置 -->
			<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 5 -->
			<property name="initialPoolSize" value="5"></property>
			<!--连接池中保留的最小连接数。Default: 5 -->
			<property name="minPoolSize" value="5"></property>
			<!--连接池中保留的最大连接数。Default: 15 -->
			<property name="maxPoolSize" value="100"></property>
			<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 5 -->
			<property name="acquireIncrement" value="5"></property>
			<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
			<property name="maxStatements" value="500"></property>
			<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
			<property name="maxStatementsPerConnection" value="5"></property>
			<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
			<property name="maxIdleTime" value="1800"></property>	   
			<property name="idleConnectionTestPeriod" value="60"></property>
			<property name="testConnectionOnCheckout" value="true"></property>
			<property name="testConnectionOnCheckin" value="true"></property> 
				    	 
	</bean>
	
	<!--创建Spring的SessionFactory工厂 -->
	<!-- 
	和hibernate4整合没有提供专门的针对Annotation的类，直接在LocalSessionFactoryBean中已经集成
 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 设置Spring取那个包中查找相应的实体类 -->
		<property name="packagesToScan">
			<value>com.edeas.admango.model</value>
		</property>
		<property name="hibernateProperties">
			<!-- <value> hibernate.dialect=org.hibernate.dialect.HSQLDialect </value> -->
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">false</prop>
				
				<prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">classpath*:ehcache.xml</prop>
			</props>
		</property>
	</bean>
	
	<!-- 基于注解的方式配置事务处理 -->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />	        
    </bean>

	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	
	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		 <property name="corePoolSize" value="10" />
		 <property name="maxPoolSize" value="100" />
		 <property name="queueCapacity" value="500" />
	</bean>
	
	<bean id="taskScheduler" class="com.yoson.scheduler.TaskScheduler" />
	
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 	<property name="targetObject" ref="taskScheduler" />
	 	<property name="targetMethod" value="doTrade" />
	</bean>
	
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	 	<property name="jobDetail" ref="jobDetail" />
	 	<property name="cronExpression" value="*/1 * * * * ?" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	 <property name="triggers">
	  <list>
	   <ref bean="cronTrigger" />
	  </list>
	 </property>
	 <property name="taskExecutor" ref="executor" />
	</bean>
	
</beans>